syntax = "proto3";

// https://developers.google.com/protocol-buffers/docs/style

package impresso.query;

enum FilterContext {
  CONTEXT_UNSPECIFIED = 0;
  CONTEXT_INCLUDE = 1;
  CONTEXT_EXCLUDE = 2;
}

enum FilterOperator {
  OPERATOR_UNSPECIFIED = 0;
  OPERATOR_AND = 1;
  OPERATOR_OR = 2;
}

enum FilterType {
  TYPE_UNSPECIFIED = 0;
  TYPE_UID = 1;
  TYPE_HAS_TEXT_CONTENTS = 2;
  TYPE_TITLE = 3;
  TYPE_IS_FRONT = 4;
  TYPE_PAGE = 5;
  TYPE_ISSUE = 6;
  TYPE_STRING = 7;
  TYPE_ENTITY = 8;
  TYPE_NEWSPAPER = 9;
  TYPE_DATERANGE = 10;
  TYPE_YEAR = 11;
  TYPE_LANGUAGE = 12;
  TYPE_TYPE = 13;
  TYPE_REGEX = 14;
  TYPE_MENTION = 15;
  TYPE_PERSON = 16;
  TYPE_LOCATION = 17;
  TYPE_TOPIC = 18;
  TYPE_COLLECTION = 19;
  TYPE_OCR_QUALITY = 20;
  TYPE_CONTENT_LENGTH = 21;
  TYPE_COUNTRY = 22;
  TYPE_ACCESS_RIGHT = 23;
  TYPE_PARTNER = 24;

  TYPE_MONTH = 25;

  // text reuse types
  TYPE_TEXT_REUSE_CLUSTER_SIZE = 26;
  TYPE_TEXT_REUSE_CLUSTER_LEXICAL_OVERLAP = 27;
  TYPE_TEXT_REUSE_CLUSTER_DAY_DELTA = 28;

  // cluster in articles
  TYPE_TEXT_REUSE_CLUSTER = 29;

  // mentions and entities
  TYPE_MENTION_FUNCTION = 30;
  TYPE_NAG = 31;
}

enum FilterPrecision {
  PRECISION_UNSPECIFIED = 0;
  PRECISION_EXACT = 1;
  PRECISION_PARTIAL = 2;
  PRECISION_FUZZY = 3;
  PRECISION_SOFT = 4;
}

message DateRange {
  // https://developers.google.com/protocol-buffers/docs/encoding#signed-integers
  sint64 from = 1; // UNIX timestamp
  sint64 to = 2; // UNIX timestamp
}

message Filter {
  FilterContext context = 1;
  FilterOperator op = 2;
  FilterType type = 3;
  FilterPrecision precision = 4;
  repeated string q = 5;
  DateRange daterange = 6;
  repeated string uids = 7;
}

enum GroupValue {
  GROUPVALUE_UNSPECIFIED = 0;
  GROUPVALUE_ARTICLES = 1;
}

message SearchQuery {
  repeated Filter filters = 1;
  GroupValue group_by = 2;
}

// Collection Recommender

message CollectionRecommenderParameter {
  enum RecommenderParameterId {
    ID_UNSPECIFIED = 0;
    ID_COUNT_TYPE = 1;
    ID_MIN_OCCURRENCES = 2;
    ID_NUMBER_TO_KEEP = 3;
    ID_REMOVE_FULLY_MENTIONED = 4;
    ID_NORMALIZE_MAX_SCORE = 5;
    ID_MARGIN = 6;
    ID_SCALING_FACTOR = 7;
  }
  
  RecommenderParameterId key = 1;
  string string_value = 2;
  sint32 number_value = 3;
  bool bool_value = 4;
}

message CollectionRecommender {
  enum RecommenderType {
    TYPE_UNSPECIFIED = 0;
    TYPE_TIME_RANGE = 1;
    TYPE_ENTITIES = 2;
    TYPE_TOPICS = 3;
    TYPE_TEXT_REUSE_CLUSTERS = 4;
  }
  RecommenderType type = 1;
  sint32 weight = 2;
  repeated CollectionRecommenderParameter parameters = 3;
  bool enabled = 4;
}

message CollectionRecommendersSettings {
  repeated CollectionRecommender recommenders = 1;
}
